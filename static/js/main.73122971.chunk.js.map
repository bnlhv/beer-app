{"version":3,"sources":["assets/beer-logo.jpg","assets/beer-jumbo.jpg","Components/NavigationBar.js","Components/About.js","Components/Home.js","Components/Breweries.js","Components/Brewery.js","Components/noMatch.js","Components/Jumbotron.js","Containers/App.js","serviceWorker.js","index.js"],"names":["module","exports","NavigationBar","Navbar","expand","sticky","Brand","href","Image","height","src","logo","alt","roundedCircle","Toggle","aria-controls","Collapse","id","Nav","className","fill","variant","defaultActiveKey","Item","Link","About","Container","Home","Breweries","useState","breweries","setBreweries","useEffect","fetchItems","a","fetch","res","json","data","console","log","h1Style","fontSize","lineHeight","marginTop","width","textAlign","map","brewery","key","style","to","name","Brewery","match","setBrewery","isLoading","setIsLoading","params","addressStyle","street","city","state","country","phone","website_url","borderBottom","margin","textTransform","textShadow","Spinner","animation","noMatch","Jumbotron","styleJumbo","background","beer","backgroundSize","color","position","zIndex","alignItems","fluid","backgroundColor","opacity","top","left","bottom","right","fontWeight","App","path","exact","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.73122971.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/beer-logo.c3a5e0de.jpg\";","module.exports = __webpack_public_path__ + \"static/media/beer-jumbo.87d522b5.jpg\";","import React from 'react';\r\nimport './NavigationBar.css'\r\nimport { Nav, Navbar, Image } from 'react-bootstrap'\r\nimport logo from '../assets/beer-logo.jpg'\r\n\r\nexport default function NavigationBar() {\r\n\r\n  return (\r\n        <Navbar expand=\"lg\" sticky=\"top\" >\r\n            <Navbar.Brand href=\"/\"><Image height={50} src={`${logo}`} alt=\"50x50\" roundedCircle /></Navbar.Brand>\r\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\"/>\r\n            <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                <Nav className=\"ml-auto\" fill variant=\"tabs\" defaultActiveKey=\"/home\">\r\n                    <Nav.Item><Nav.Link href=\"/\">Home</Nav.Link></Nav.Item>\r\n                    <Nav.Item><Nav.Link href=\"/About\">About</Nav.Link></Nav.Item>\r\n                    <Nav.Item><Nav.Link href=\"/Breweries\">Breweries</Nav.Link></Nav.Item>\r\n                </Nav>\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n  );\r\n}","import React from 'react';\r\nimport { Container } from 'react-bootstrap'\r\n\r\n\r\nexport default function About() {\r\n  return (\r\n    <Container className=\"\">\r\n      <h1>About Page</h1>\r\n    </Container>\r\n  );\r\n}","import React from 'react'\r\nimport { Container } from 'react-bootstrap'\r\n\r\nexport default function Home() {\r\n    return (\r\n        <Container>\r\n          <h1>Home Page</h1>\r\n        </Container>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport { Container } from 'react-bootstrap'\r\n\r\nexport default function Breweries() {\r\n\r\n    const [breweries, setBreweries] = useState([]);\r\n\r\n    useEffect (() => {\r\n        fetchItems();\r\n    }, [])\r\n\r\n    const fetchItems = async () => {\r\n        const res = await fetch('https://api.openbrewerydb.org/breweries');\r\n        const data = await res.json();\r\n        console.log(data);\r\n        setBreweries(data);\r\n    }\r\n\r\n    const h1Style = {\r\n        fontSize: '24px',\r\n        lineHeight: '3rem',\r\n        marginTop: '2rem',\r\n        width: '100%', \r\n        textAlign: 'center' \r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            {\r\n                breweries.map( brewery => {\r\n                   return ( \r\n                        <h1 \r\n                            key={brewery.id} \r\n                            style={h1Style}>\r\n                                <Link to={`/Breweries/${brewery.id}`}>\r\n                                    {brewery.name}\r\n                                </Link>\r\n                        </h1>\r\n                    );\r\n                })\r\n            }\r\n        </Container>\r\n    )\r\n}\r\n","import React, { useState, useEffect, Fragment } from 'react';\r\nimport { Container, Spinner } from 'react-bootstrap'\r\n\r\nexport default function Brewery( { match } ) {\r\n\r\n    const [brewery, setBrewery] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    useEffect (() => {\r\n        fetchItems();\r\n    }, [])\r\n\r\n    const fetchItems = async () => {\r\n        const res = await fetch(`https://api.openbrewerydb.org/breweries/${match.params.id}`);\r\n        const data = await res.json();\r\n        console.log(data);\r\n        setBrewery(data);\r\n        setIsLoading(true);\r\n    }\r\n\r\n    const h1Style = {\r\n        width: '100%', \r\n        textAlign: 'center', \r\n        borderBottom: '1px solid #000', \r\n        lineHeight: '0.1e',\r\n        margin: '10px 0 20p', \r\n        textTransform: 'uppercase',\r\n        textShadow: '0 2px white, 0 3px #777'\r\n\r\n    }\r\n\r\n    const addressStyle = {\r\n        lineHeight: '3rem',\r\n        marginTop: '2rem',\r\n        fontSize: '20px'\r\n    }\r\n\r\n\r\n    const pageContent = <div dangerouslySetInnerHTML={{__html:`\r\n                        <div>\r\n                            <h1 style={h1Style}>\r\n                                ${brewery.name}\r\n                            </h1>\r\n                        </div>\r\n                        <div>\r\n                            <address style=${addressStyle}>\r\n                                <b>Address: </b>${brewery.street}, ${brewery.city}, ${brewery.state}<br/>\r\n                                ${brewery.country}<br/>\r\n                                <b>Phone: </b>${brewery.phone}\r\n                                <br/>\r\n                                <b>Website :</b><a href={\\`${brewery.website_url}\\`}> tap to go to the site</a>\r\n                            </address>\r\n                        </div>\r\n                    `}} />\r\n\r\n    return (\r\n        <Container >\r\n            {\r\n                !(isLoading) ? <Container ><Spinner animation=\"border\" /></Container> : (\r\n                    <Container >\r\n                        <div>\r\n                            <h1 style={h1Style}>\r\n                                {brewery.name}\r\n                            </h1>\r\n                        </div>\r\n                        <div>\r\n                            <address style={addressStyle}>\r\n                                <b>Address: </b>{brewery.street}, {brewery.city}, {brewery.state}<br/>\r\n                                {brewery.country}<br/>\r\n                                <b>Phone: </b>{brewery.phone}\r\n                                <br/>\r\n                                <b>Website :</b><a href={brewery.website_url}> tap to go to the site</a>\r\n                            </address>\r\n                        </div>\r\n                    </Container>\r\n                )\r\n            }\r\n        </Container>\r\n    )\r\n}","import React from 'react';\r\n\r\nexport default function noMatch() {\r\n\r\n  return (\r\n    <h1>No Matching Url</h1>\r\n  );\r\n}","import React from 'react'\r\nimport { Jumbotron as Jumbo, Container } from 'react-bootstrap'\r\nimport beer from '../assets/beer-jumbo.jpg'\r\n\r\nexport default function Jumbotron() {\r\n    \r\n    const styleJumbo = {\r\n        background: `url(${beer}) no-repeat fixed bottom`,\r\n        backgroundSize: 'cover',\r\n        color: '#efefef',\r\n        height: '250px',\r\n        position: 'relative',\r\n        zIndex: '-2',\r\n        textAlign: 'center',\r\n        alignItems: 'center'\r\n    }\r\n\r\n    const styleOverlay = {\r\n        backgroundColor: '#aea4a4',\r\n        opacity: '0.6',\r\n        position: 'absolute',\r\n        top: '0',\r\n        left: '0',\r\n        bottom: '0',\r\n        right: '0',\r\n        zIndex: '-1'\r\n    }\r\n\r\n    const styleH1 = {\r\n        fontSize: '60px',\r\n        fontWeight: '700'\r\n    }\r\n\r\n    const styleP = {\r\n        fontSize: '30px',\r\n        fontWeight: '500'\r\n    }\r\n    \r\n    return (\r\n        <>\r\n            <Jumbo fluid className=\"jumbo\" style={styleJumbo}>\r\n                <div className=\"overlay\" style={styleOverlay}></div>\r\n                <Container>\r\n                    <h1 style={styleH1}>Welcome</h1>\r\n                    <p style={styleP}>the greatest beer site ever!!</p>\r\n                </Container>\r\n            </Jumbo>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport './App.css';\n\nimport NavigationBar from '../Components/NavigationBar'\nimport About from '../Components/About'\nimport Home from '../Components/Home'\nimport Breweries from '../Components/Breweries'\nimport Brewery from '../Components/Brewery'\nimport noMatch from '../Components/noMatch'\nimport Jumbotron from '../Components/Jumbotron'\n\nimport { Container } from 'react-bootstrap'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\n\nfunction App() {\n  return (\n      <Container fluid className=\"p-0 app\">\n        <Router>\n          <NavigationBar/>\n          <Jumbotron/>\n          <Switch>\n            <Route path=\"/\" exact component={Home} />\n            <Route path=\"/about\" component={About} />\n            <Route path=\"/breweries\" exact component={Breweries} />\n            <Route path=\"/breweries/:id\" component={Brewery} />\n            <Route component={noMatch} />\n          </Switch>\n        </Router>\n      </Container> \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Containers/App'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}